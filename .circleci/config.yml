version: 2.1

jobs:

  test-microservice:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - restore_cache:
          keys: [test-microservice]
      - run: 
          name: Installing Dependencies
          command: |
            apk add build-base
            pip install flask
            pip install pylint
      - run:
          name: Linting Flask Microservice
          command: |
            pylint microservice.py
      - save_cache:
          paths: [cache/test-microservice]
          key: test-microservice

  build-image:
    docker:
      - image: cimg/python:3.7    
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Building and Pushing Docker Image
          command: |
            docker image build -t microservice-img .
            pip install awscli
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 478288121115.dkr.ecr.us-east-1.amazonaws.com
            docker tag microservice-img 478288121115.dkr.ecr.us-east-1.amazonaws.com/microservice-udacity-5:latest
            docker push 478288121115.dkr.ecr.us-east-1.amazonaws.com/microservice-udacity-5:latest

  create-and-deploy:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run: 
          name: Installing Dependencies
          command: |
            apk add build-base
            apk add curl
            apk add sudo
            pip install awscli
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            kubectl version --short --client
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
      - run:
          name: Create Kubernetes Cluster
          command: |
            eksctl create cluster \
            --zones us-east-1a,us-east-1b,us-east-1c,us-east-1d,us-east-1f \
            --name udacityCapstoneFinal
            export KUBECONFIG=~/.kube/config
      - run:
          name: Create EKS Deployment
          command: |
            kubectl apply -f kubeDeploy.yml
      - run:
          wname: Create EKS Service
          command: |
            kubectl apply -f kubeService.yml
          
workflows:
  default:
    jobs:
      - test-microservice:
          filters:
            branches:
              only: [main]
      - build-image:
          requires: [test-microservice]
      - create-and-deploy:
          requires: [build-image]


     