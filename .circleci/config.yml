version: 2.1

jobs:
  test-microservice:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - restore_cache:
          keys: [test-microservice]
      - run: 
          name: Installing Dependencies
          command: |
            apk add build-base
            pip install flask
            pip install pylint
      - run:
          name: Linting Flask Microservice
          command: |
            pylint microservice.py
      - save_cache:
          paths: [cache/test-microservice]
          key: test-microservice

  create-infrastructure:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run: 
          name: Installing Dependencies
          command: |
            apk add build-base
            apk add curl
            apk add sudo
            pip install awscli
            curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.22.6/2022-03-09/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
            kubectl version --short --client
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
      - run:
          name: Build Kubernetes Cluster
          command: |
            kubectl run python-microservice --image=YOUR_IMAGE_URL --requests=cpu=500m --expose --port=80
            kubectl expose deployment python-microservice --type=LoadBalancer --name=microservice-endpoint
            kubectl get services microservice-endpoint
  build-image:
    docker:
      - image: cimg/python:3.7
        auth:
          username: rexcode11
          password: $DOCKERHUB_PASS     
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true
      - run:
          name: Building and Publishing Docker Image
          command: |
            docker image build -t microservice-img .
            echo "$DOCKERHUB_PASS" | docker login -u rexcode11 --password-stdin
            docker tag microservice-img rexcode11/udacity-5
            docker image push rexcode11/udacity-5

            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 478288121115.dkr.ecr.us-east-1.amazonaws.com
            docker tag microservice-img 478288121115.dkr.ecr.us-east-1.amazonaws.com/microservice-udacity-5:latest
            docker push 478288121115.dkr.ecr.us-east-1.amazonaws.com/microservice-udacity-5:latest
            

workflows:
  default:
    jobs:
      - test-microservice:
          filters:
            branches:
              only: [main]
      - create-infrastructure:
          requires: [test-microservice]
      - build-image:
          requires: [test-microservice]


     